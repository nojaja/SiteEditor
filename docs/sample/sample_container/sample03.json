{
    "v": 0.1,
    "id": "",
    "files": {
        "index.ahtml": {
            "filename": "index.ahtml",
            "fileType": "txt",
            "type": "text/html",
            "language": "ahtml",
            "size": 0,
            "truncated": false,
            "content": "<html>\n<head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/redux/3.5.2/redux.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.5/js/uikit.min.js\"></script>\n    <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/uikit/3.0.0-beta.5/css/uikit.min.css'>\n    <script src=\"main.js\"></script>\n</head>\n<body>\n\t\t<div className=\"uk-section uk-section-default uk-section-small uk-padding-remove-top\">\n      <div id='target' className='uk-container'>\n \n    \t\t<div className=\"uk-child-width-1-4@m uk-grid-match\" uk-grid>\n      \n        <Reactcard title='Test' >\n          <Reactinput label='input' ></Reactinput>\n          <Reactlabel id='hoge' label='message' ></Reactlabel>\n          <p>Lorem ipsum <a href=\"#\">dolor</a> sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n          <Reactmargin>\n        \t\t<Reactbutton label='Action1' href='#' ></Reactbutton>\n          </Reactmargin>\n  \t\t\t</Reactcard>\n  \n        </div>\n      </div>\n    </div>\n<element name=\"Reactlabel\">\n  <template>\n      <div>\n  \t\t\t<span className=\"uk-label\">{this.props.label}</span><label id='caption'>{store.getState().main.message}</label>\n      </div>\n  </template>\n</element>\n     \n<element name=\"Reactlabel\">\n  <template>\n      <div>\n  \t\t\t<span className=\"uk-label\">{this.props.label}</span><label id='caption'>{store.getState().main.message}</label>\n      </div>\n  </template>\n</element>\n  \n<element name=\"Reactinput\">\n  <script language='es6'>\n   handleChange(e) {\n    TestAction.change(e.target.value);\n  }\n  </script>\n  <template>\n    <div>\n \t\t\t<span className=\"uk-label\">{this.props.label}</span>\n      <input id='message' className='uk-input' value={store.getState().main.message} onChange={this.handleChange}  />\n    </div>\n  </template>\n</element>\n  \n<element name=\"Reactbutton\">\n  <template>\n        <a className=\"uk-button uk-button-default\" href=\"{this.props.href}\">{this.props.label}</a>\n  </template>\n</element>\n  \n<element name=\"Reactmargin\">\n  <template>\n        <p uk-margin=\"\">{this.props.children}</p>\n  </template>\n</element>\n  \n<element name=\"Reactcard\">\n  <template>\n  \t\t<div>\n        <div className=\"uk-card uk-card-primary uk-card-hover\">\n          <div className=\"uk-card-body\">\n            <h3 className=\"uk-card-title\">{this.props.title}</h3>\n  \t\t\t\t\t{this.props.children}\n          </div>\n        </div>\n      </div>\n  </template>\n</element>\n  \n</body>\n</html>",
            "description": ""
        },
        "main.js": {
            "filename": "main.js",
            "fileType": "txt",
            "type": "text/javascript",
            "language": "JavaScript",
            "size": 0,
            "truncated": false,
            "content": "//Reducer\r\nfunction mainReducer(state = {\"message\":\"hello\"}, action) {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      console.log(action.text);\r\n      state.message =action.text; \r\n      return state;\r\n    case 'INIT':\r\n      console.log(state);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//store \r\nvar apps = Redux.combineReducers({\r\n  main: mainReducer\r\n});\r\n\r\n// ページが読み込まれたら、ローカルストレージから状態を読み込む\r\nvar defaultState = JSON.parse(localStorage.getItem('state')) || {\"message\":\"hello\"};\r\nconsole.log(\"defaultState:\" + JSON.stringify(defaultState));\r\nvar store = Redux.createStore(apps, defaultState);\r\n//var store = Redux.createStore(apps);\r\n\r\n/* Action + action creators */\r\nvar TestAction = {//action creators\r\n  init: function(){\r\n    store.dispatch({\r\n      type: 'INIT'\r\n    }); \r\n  },\r\n  change: function (value) {\r\n    console.log(value);\r\n    store.dispatch({\r\n      type: 'CHANGE',\r\n      text: value\r\n    }); //action creators\r\n  }\r\n};\r\n\r\nfunction localStorageRender() {\r\n  // ローカルストレージに最新の状態を保存\r\n  localStorage.setItem('state', JSON.stringify(store.getState()));\r\n  //console.log(\"defaultState:\" + JSON.stringify(store.getState()));\r\n}\r\n$(function() {\r\n    store.subscribe(localStorageRender);\r\n    store.subscribe(render);\r\n});",
            "description": ""
        }
    },
    "public": true,
    "createdTime": 1589111576120,
    "lastUpdatedTime": 1590675877120,
    "description": "",
    "projectName": "Test1 redux sample"
}