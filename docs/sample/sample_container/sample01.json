{
  "url": "https://api.github.com/gists/8e670a377e30a60520705d916a434a22",
  "forks_url": "https://api.github.com/gists/8e670a377e30a60520705d916a434a22/forks",
  "commits_url": "https://api.github.com/gists/8e670a377e30a60520705d916a434a22/commits",
  "id": "8e670a377e30a60520705d916a434a22",
  "node_id": "MDQ6R2lzdDhlNjcwYTM3N2UzMGE2MDUyMDcwNWQ5MTZhNDM0YTIy",
  "git_pull_url": "https://gist.github.com/8e670a377e30a60520705d916a434a22.git",
  "git_push_url": "https://gist.github.com/8e670a377e30a60520705d916a434a22.git",
  "html_url": "https://gist.github.com/8e670a377e30a60520705d916a434a22",
  "files": {
    "file1.txt": {
      "filename": "file1.txt",
      "type": "text/plain",
      "language": "Text",
      "raw_url": "https://gist.githubusercontent.com/nojaja/8e670a377e30a60520705d916a434a22/raw/ecd67559dbbd5d357fdc15a41eb88696eedb22c8/file1.txt",
      "size": 29,
      "truncated": false,
      "content": "String file contents via ajax"
    },
    "index.html": {
      "filename": "index.html",
      "type": "text/html",
      "language": "HTML",
      "raw_url": "https://gist.githubusercontent.com/nojaja/8e670a377e30a60520705d916a434a22/raw/7d201605e5deb4304d2cbe0c0b3e78163c40de38/index.html",
      "size": 787,
      "truncated": false,
      "content": "<html>\n\t<head>\n\t\t<meta charset='utf-8' />\n\t\t<meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no' />\n\t\t<title>\n\t\t\tReact Routing\n\t\t</title>\n\t\t<style>\n    .nav a {padding: 8px 16px; margin: 8px;}\n\t\t</style>\n\t\t<script src='//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>\n\t\t<script src='https://fb.me/react-15.1.0.js'></script>\n\t\t<script src='https://fb.me/react-dom-15.1.0.js'></script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/redux/3.5.2/redux.js'></script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/react-redux/5.0.5/react-redux.js'></script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/react-router-dom/4.1.1/react-router-dom.min.js'></script>\n\t</head>\n\t<body>\n\t\t<div id='app' />\n\t</body>\n</html>"
    },
    "reactrouterdom-v4-test-redux.markdown": {
      "filename": "reactrouterdom-v4-test-redux.markdown",
      "type": "text/markdown",
      "language": "Markdown",
      "raw_url": "https://gist.githubusercontent.com/nojaja/8e670a377e30a60520705d916a434a22/raw/a96c4f72b0400b7c13dc2ca4b8d87b4da014d7ff/reactrouterdom-v4-test-redux.markdown",
      "size": 239,
      "truncated": false,
      "content": "ReactRouterDOM v4 test + redux\n------------------------------\n\n\nA [Pen](https://codepen.io/nojaja/pen/yXMxJJ) by [nojaja](http://codepen.io/nojaja) on [CodePen](http://codepen.io/).\n\n[License](https://codepen.io/nojaja/pen/yXMxJJ/license)."
    },
    "script.babel.js": {
      "filename": "script.babel.js",
      "type": "application/javascript",
      "language": "JavaScript",
      "raw_url": "https://gist.githubusercontent.com/nojaja/8e670a377e30a60520705d916a434a22/raw/44e2ded53877792a5785bb41669921ff29de2ed8/script.babel.js",
      "size": 2517,
      "truncated": false,
      "content": "\nconst { BrowserRouter, HashRouter, Switch, Route, Link } = ReactRouterDOM;\nconst ReactLink = ReactRouterDOM.Link;\nconst createStore = Redux.createStore;\nconst Provider = ReactRedux.Provider;\n\nfunction mainReducer(state = {\"message\":\"hello\"}, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\n//store \nvar apps = Redux.combineReducers({\n  main: mainReducer\n});\nvar store = createStore(apps);\n\nclass XNav extends React.Component {\n  render() {\n    return React.createElement(\n      \"div\",\n      { className: \"nav\" },\n      console.log(this.context.router),\n      React.createElement(ReactLink, { to: \"/home\" }, \"home\"),\n      React.createElement(ReactLink, { to: \"/about\" }, \"about\"),\n      React.createElement(\"button\", { onClick: this.handleChange }, \"test\")\n    );\n  }\n  static get contextTypes() {\n    return { router: React.PropTypes.any };\n  }\n  handleChange(e) {\n    console.log(this);\n    //history.back();\n    history.pushState(null, null, \"/about\");\n  }\n}\nclass PageHome extends React.Component {\n  render() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\"h1\", null, \"Home Page\")\n    );\n  }\n}\nclass PageAbout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(e) {\n    console.log(\"handleClick\", this);\n    console.log(store.getState().main.message);\n    this.props.history.push(\"/home\");\n  }\n  render() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\"h1\", null, \"Link 1 Page\"),\n      React.createElement(\"button\", { onClick: this.handleClick }, \"test\")\n    );\n  }\n}\nclass App extends React.Component {\n  render() {\n    return React.createElement(Provider, { store: store },\n      React.createElement(\n        HashRouter,\n        null,\n        React.createElement(\n          \"div\",\n          null,\n          React.createElement(XNav, null),\n          React.createElement(Route, { path: \"/home\", component: PageHome }),\n          React.createElement(Route, { path: \"/about\", component: VisiblePageAbout })\n        )\n      )\n    );\n  }\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nconst VisiblePageAbout = ReactRedux.connect(mapStateToProps)(PageAbout);\n\n\nvar render = function render() {\n  ReactDOM.render(\n    React.createElement(App, null),\n    document.querySelector(\"#app\")\n  );\n};\n\n$(function() {\n  render();\n});\n"
    }
  },
  "public": true,
  "created_at": "2017-06-20T13:03:00Z",
  "updated_at": "2020-05-05T03:41:21Z",
  "description": "a gist for a user with token api call via ajax",
  "comments": 0,
  "user": null,
  "comments_url": "https://api.github.com/gists/8e670a377e30a60520705d916a434a22/comments",
  "truncated": false
}
